{"version":3,"file":"Observer.min.js","sources":["../src/Observer.js"],"sourcesContent":["/*!\n * Observer 3.10.0\n * https://greensock.com\n *\n * @license Copyright 2008-2022, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nlet gsap, _coreInitted, _clamp, _win, _doc, _docEl, _body, _isTouch, _pointerType, ScrollTrigger, _root, _normalizer,\n\t_getGSAP = () => gsap || (typeof(window) !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap),\n\t_passThrough = p => p,\n\t_startup = 1,\n\t_observers = [],\n\t_scrollers = [],\n\t_proxies = [],\n\t_getTime = Date.now,\n\t_bridge = (name, value) => value,\n\t_integrate = () => {\n\t\tlet core = ScrollTrigger.core,\n\t\t\tdata = core.bridge || {},\n\t\t\tscrollers = core._scrollers,\n\t\t\tproxies = core._proxies;\n\t\tscrollers.push(..._scrollers);\n\t\tproxies.push(..._proxies);\n\t\t_scrollers = scrollers;\n\t\t_proxies = proxies;\n\t\t_bridge = (name, value) => data[name](value);\n\t},\n\t_getProxyProp = (element, property) => ~_proxies.indexOf(element) && _proxies[_proxies.indexOf(element) + 1][property],\n\t_isViewport = el => !!~_root.indexOf(el),\n\t_addListener = (element, type, func, nonPassive) => element.addEventListener(type, func, {passive: !nonPassive}),\n\t_removeListener = (element, type, func) => element.removeEventListener(type, func),\n\t_scrollLeft = \"scrollLeft\",\n\t_scrollTop = \"scrollTop\",\n\t_onScroll = () => (_normalizer && _normalizer.isPressed) || _scrollers.cache++,\n\t_scrollCacheFunc = f => value => { // since reading the scrollTop/scrollLeft/pageOffsetY/pageOffsetX can trigger a layout, this function allows us to cache the value so it only gets read fresh after a \"scroll\" event fires (or while we're refreshing because that can lengthen the page and alter the scroll position). when \"soft\" is true, that means don't actually set the scroll, but cache the new value instead (useful in ScrollSmoother)\n\t\tif (value || value === 0) {\n\t\t\t_startup && (_win.history.scrollRestoration = \"manual\"); // otherwise the new position will get overwritten by the browser onload.\n\t\t\tf(value);\n\t\t\tf.v = value;\n\t\t\tf.c = _scrollers.cache;\n\t\t\t_normalizer && _normalizer.isPressed && _bridge(\"ss\", value); // set scroll (notify ScrollTrigger so it can dispatch a \"scrollStart\" event if necessary\n\t\t} else if (_scrollers.cache !== f.c || _bridge(\"ref\")) {\n\t\t\tf.c = _scrollers.cache;\n\t\t\tf.v = f();\n\t\t}\n\t\treturn f.v;\n\t},\n\t_horizontal = {s: _scrollLeft, p: \"left\", p2: \"Left\", os: \"right\", os2: \"Right\", d: \"width\", d2: \"Width\", a: \"x\", sc: _scrollCacheFunc(function(value) { return arguments.length ? _win.scrollTo(value, _vertical.sc()) : _win.pageXOffset || _doc[_scrollLeft] || _docEl[_scrollLeft] || _body[_scrollLeft] || 0})},\n\t_vertical = {s: _scrollTop, p: \"top\", p2: \"Top\", os: \"bottom\", os2: \"Bottom\", d: \"height\", d2: \"Height\", a: \"y\", op: _horizontal, sc: _scrollCacheFunc(function(value) { return arguments.length ? _win.scrollTo(_horizontal.sc(), value) : _win.pageYOffset || _doc[_scrollTop] || _docEl[_scrollTop] || _body[_scrollTop] || 0})},\n\t_getTarget = t => gsap.utils.toArray(t)[0] || (typeof(t) === \"string\" && gsap.config().nullTargetWarn !== false ? console.warn(\"Element not found:\", t) : null),\n\n\t_getScrollFunc = (element, {s, sc}) => { // we store the scroller functions in a alternating sequenced Array like [element, verticalScrollFunc, horizontalScrollFunc, ...] so that we can minimize memory, maximize performance, and we also record the last position as a \".rec\" property in order to revert to that after refreshing to ensure things don't shift around.\n\t\tlet i = _scrollers.indexOf(element),\n\t\t\toffset = sc === _vertical.sc ? 1 : 2;\n\t\t!~i && (i = _scrollers.push(element) - 1);\n\t\treturn _scrollers[i + offset] || (_scrollers[i + offset] = _getProxyProp(element, s) || (_isViewport(element) ? sc : function(value) { return arguments.length ? (element[s] = value) : element[s]; }));\n\t},\n\t_getVelocityProp = (value, minTimeRefresh, useDelta) => {\n\t\tlet v1 = value,\n\t\t\tv2 = value,\n\t\t\tt1 = _getTime(),\n\t\t\tt2 = t1,\n\t\t\tmin = minTimeRefresh || 50,\n\t\t\tdropToZeroTime = Math.max(500, min * 3),\n\t\t\tupdate = (value, force) => {\n\t\t\t\tlet t = _getTime();\n\t\t\t\tif (force || t - t1 > min) {\n\t\t\t\t\tv2 = v1;\n\t\t\t\t\tv1 = value;\n\t\t\t\t\tt2 = t1;\n\t\t\t\t\tt1 = t;\n\t\t\t\t} else if (useDelta) {\n\t\t\t\t\tv1 += value;\n\t\t\t\t} else { // not totally necessary, but makes it a bit more accurate by adjusting the v1 value according to the new slope. This way we're not just ignoring the incoming data. Removing for now because it doesn't seem to make much practical difference and it's probably not worth the kb.\n\t\t\t\t\tv1 = v2 + (value - v2) / (t - t2) * (t1 - t2);\n\t\t\t\t}\n\t\t\t},\n\t\t\treset = () => { v2 = v1 = useDelta ? 0 : v1; t2 = t1 = 0; },\n\t\t\tgetVelocity = latestValue => {\n\t\t\t\tlet tOld = t2,\n\t\t\t\t\tvOld = v2,\n\t\t\t\t\tt = _getTime();\n\t\t\t\t(latestValue || latestValue === 0) && latestValue !== v1 && update(latestValue);\n\t\t\t\treturn (t1 === t2 || t - t2 > dropToZeroTime) ? 0 : (v1 + (useDelta ? vOld : -vOld)) / ((useDelta ? t : t1) - tOld) * 1000;\n\t\t\t};\n\t\treturn {update, reset, getVelocity};\n\t},\n\t_getEvent = (e, preventDefault) => {\n\t\tpreventDefault && e.preventDefault();\n\t\treturn e.changedTouches ? e.changedTouches[0] : e;\n\t},\n\t_getAbsoluteMax = a => {\n\t\tlet max = Math.max(...a),\n\t\t\tmin = Math.min(...a);\n\t\treturn Math.abs(max) >= Math.abs(min) ? max : min;\n\t},\n\t_initCore = core => {\n\t\tgsap = core || _getGSAP();\n\t\tif (gsap && !_coreInitted && typeof(document) !== \"undefined\") {\n\t\t\t_win = window;\n\t\t\t_doc = document;\n\t\t\t_docEl = _doc.documentElement;\n\t\t\t_body = _doc.body;\n\t\t\t_root = [_win, _doc, _docEl, _body];\n\t\t\t_clamp = gsap.utils.clamp;\n\t\t\t_pointerType = \"onpointerenter\" in _body ? \"pointer\" : \"mouse\";\n\t\t\t// isTouch is 0 if no touch, 1 if ONLY touch, and 2 if it can accommodate touch but also other types like mouse/pointer.\n\t\t\t_isTouch = Observer.isTouch = _win.matchMedia && _win.matchMedia(\"(hover: none), (pointer: coarse)\").matches ? 1 : (\"ontouchstart\" in _win || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0) ? 2 : 0;\n\t\t\tsetTimeout(() => _startup = 0, 500);\n\t\t\t_coreInitted = 1;\n\t\t}\n\t\treturn _coreInitted;\n\t};\n\n_horizontal.op = _vertical;\n_scrollers.cache = 0;\n\nexport class Observer {\n\tconstructor(vars) {\n\t\tthis.init(vars);\n\t}\n\n\tinit(vars) {\n\t\t_coreInitted || _initCore(gsap) || console.warn(\"Please gsap.registerPlugin(Observer)\");\n\t\tif (!ScrollTrigger) {\n\t\t\tScrollTrigger = gsap.core.globals().ScrollTrigger;\n\t\t\tScrollTrigger && ScrollTrigger.core && _integrate();\n\t\t}\n\t\tlet {tolerance, dragMinimum, type, target, lineHeight, debounce, preventDefault, onStop, onStopDelay, ignore, wheelSpeed, event, onDragStart, onDragEnd, onDrag, onPress, onRelease, onRight, onLeft, onUp, onDown, onChangeX, onChangeY, onChange, onToggleX, onToggleY, onHover, onHoverEnd, onMove, ignoreCheck, isNormalizer, onGestureStart, onGestureEnd, onWheel, onEnable, onDisable, onClick} = vars;\n\t\tthis.target = target = _getTarget(target) || _docEl;\n\t\tthis.vars = vars;\n\t\tignore && (ignore = gsap.utils.toArray(ignore));\n\t\ttolerance = tolerance || 0;\n\t\tdragMinimum = dragMinimum || 0;\n\t\twheelSpeed = wheelSpeed || 1;\n\t\ttype = type || \"wheel,touch,scroll,pointer\";\n\t\tdebounce = debounce !== false;\n\t\tlineHeight || (lineHeight = parseFloat(_win.getComputedStyle(_body).lineHeight) || 22); // note: browser may report \"normal\", so default to 22.\n\t\tlet id, onStopDelayedCall, dragged, moved, wheeled,\n\t\t\tself = this,\n\t\t\tprevDeltaX = 0,\n\t\t\tprevDeltaY = 0,\n\t\t\tscrollFuncX = _getScrollFunc(target, _horizontal),\n\t\t\tscrollFuncY = _getScrollFunc(target, _vertical),\n\t\t\tscrollX = scrollFuncX(),\n\t\t\tscrollY = scrollFuncY(),\n\t\t\tevents = (\"ontouchstart\" in _docEl ? \"touchstart,touchmove,touchcancel,touchend\" : type.indexOf(\"pointer\") >= 0 && !(\"onpointerdown\" in _docEl) ? \"mousedown,mousemove,mouseup,mouseup\" : \"pointerdown,pointermove,pointercancel,pointerup\").split(\",\"),\n\t\t\tlimitToTouch = ~type.indexOf(\"touch\") && !~type.indexOf(\"pointer\") && events[0] === \"pointerdown\", // for devices that accommodate mouse events and touch events, we need to distinguish.\n\t\t\tisViewport = _isViewport(target),\n\t\t\townerDoc = target.ownerDocument || _doc,\n\t\t\tdeltaX = [0, 0, 0], // wheel, scroll, pointer/touch\n\t\t\tdeltaY = [0, 0, 0],\n\t\t\t_ignoreCheck = (e, isPointerOrTouch) => (self.event = e) && (ignore && ~ignore.indexOf(e.target)) || (isPointerOrTouch && limitToTouch && e.pointerType !== \"touch\") || (ignoreCheck && ignoreCheck(e)),\n\t\t\tonStopFunc = () => {\n\t\t\t\tself._vx.reset();\n\t\t\t\tself._vy.reset();\n\t\t\t\tonStopDelayedCall.pause();\n\t\t\t\tonStop && onStop(self);\n\t\t\t},\n\t\t\tupdate = () => {\n\t\t\t\tlet dx = self.deltaX = _getAbsoluteMax(deltaX),\n\t\t\t\t\tdy = self.deltaY = _getAbsoluteMax(deltaY),\n\t\t\t\t\tchangedX = Math.abs(dx) >= tolerance,\n\t\t\t\t\tchangedY = Math.abs(dy) >= tolerance;\n\t\t\t\tonChange && (changedX || changedY) && onChange(self, dx, dy, deltaX, deltaY); // in ScrollTrigger.normalizeScroll(), we need to know if it was touch/pointer so we need access to the deltaX/deltaY Arrays before we clear them out.\n\t\t\t\tif (changedX) {\n\t\t\t\t\tonRight && self.deltaX > 0 && onRight(self);\n\t\t\t\t\tonLeft && self.deltaX < 0 && onLeft(self);\n\t\t\t\t\tonChangeX && onChangeX(self);\n\t\t\t\t\tonToggleX && ((self.deltaX < 0) !== (prevDeltaX < 0)) && onToggleX(self);\n\t\t\t\t\tprevDeltaX = self.deltaX;\n\t\t\t\t\tdeltaX[0] = deltaX[1] = deltaX[2] = 0\n\t\t\t\t}\n\t\t\t\tif (changedY) {\n\t\t\t\t\tonDown && self.deltaY > 0 && onDown(self);\n\t\t\t\t\tonUp && self.deltaY < 0 && onUp(self);\n\t\t\t\t\tonChangeY && onChangeY(self);\n\t\t\t\t\tonToggleY && ((self.deltaY < 0) !== (prevDeltaY < 0)) && onToggleY(self);\n\t\t\t\t\tprevDeltaY = self.deltaY;\n\t\t\t\t\tdeltaY[0] = deltaY[1] = deltaY[2] = 0\n\t\t\t\t}\n\t\t\t\tif (moved) {\n\t\t\t\t\tonMove(self);\n\t\t\t\t\tmoved = false;\n\t\t\t\t}\n\t\t\t\tif (dragged) {\n\t\t\t\t\tonDrag(self);\n\t\t\t\t\tdragged = false;\n\t\t\t\t}\n\t\t\t\tif (wheeled) {\n\t\t\t\t\tonWheel(self);\n\t\t\t\t\twheeled = false;\n\t\t\t\t}\n\t\t\t\tid = 0;\n\t\t\t},\n\t\t\tonDelta = (x, y, index) => {\n\t\t\t\tdeltaX[index] += x;\n\t\t\t\tdeltaY[index] += y;\n\t\t\t\tself._vx.update(x, index === 2); // update the velocity as frequently as possible instead of in the debounced function so that very quick touch-scrolls (flicks) feel natural. If it's the mouse/touch/pointer, force it so that we get snappy/accurate momentum scroll.\n\t\t\t\tself._vy.update(y, index === 2);\n\t\t\t\tdebounce ? id || (id = requestAnimationFrame(update)) : update();\n\t\t\t},\n\t\t\t_onDrag = e => {\n\t\t\t\tif (_ignoreCheck(e, 1)) {return;}\n\t\t\t\te = _getEvent(e, preventDefault);\n\t\t\t\tlet x = e.clientX,\n\t\t\t\t\ty = e.clientY,\n\t\t\t\t\tdx = x - self.x,\n\t\t\t\t\tdy = y - self.y,\n\t\t\t\t\tisDragging = self.isDragging;\n\t\t\t\tself.x = x;\n\t\t\t\tself.y = y;\n\t\t\t\tif (isDragging || Math.abs(self.startX - x) >= dragMinimum || Math.abs(self.startY - y) >= dragMinimum) {\n\t\t\t\t\tonDrag && (dragged = true);\n\t\t\t\t\tisDragging || (self.isDragging = true);\n\t\t\t\t\tonDelta(dx, dy, 2);\n\t\t\t\t\tisDragging || onDragStart && onDragStart(self);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_onPress = self.onPress = e => {\n\t\t\t\tif (_ignoreCheck(e, 1)) {return;}\n\t\t\t\tonStopDelayedCall.pause();\n\t\t\t\tself.isPressed = true;\n\t\t\t\te = _getEvent(e, preventDefault);\n\t\t\t\tprevDeltaX = prevDeltaY = 0;\n\t\t\t\tself.startX = self.x = e.clientX;\n\t\t\t\tself.startY = self.y = e.clientY;\n\t\t\t\tself._vx.reset(); // otherwise the t2 may be stale if the user touches and flicks super fast and releases in less than 2 requestAnimationFrame ticks, causing velocity to be 0.\n\t\t\t\tself._vy.reset();\n\t\t\t\t_addListener(isNormalizer ? target : ownerDoc, events[1], _onDrag, preventDefault);\n\t\t\t\tself.deltaX = self.deltaY = 0;\n\t\t\t\tonPress && onPress(self);\n\t\t\t},\n\t\t\t_onRelease = e => {\n\t\t\t\tif (_ignoreCheck(e, 1)) {return;}\n\t\t\t\t_removeListener(isNormalizer ? target : ownerDoc, events[1], _onDrag);\n\t\t\t\tlet wasDragging = self.isDragging;\n\t\t\t\tif (!wasDragging) {\n\t\t\t\t\tself._vx.reset();\n\t\t\t\t\tself._vy.reset();\n\t\t\t\t}\n\t\t\t\tself.isDragging = self.isGesturing = self.isPressed = false;\n\t\t\t\tonStop && !isNormalizer && onStopDelayedCall.restart(true);\n\t\t\t\tonDragEnd && wasDragging && onDragEnd(self);\n\t\t\t\tonRelease && onRelease(self, wasDragging);\n\t\t\t},\n\t\t\t_onGestureStart = e => e.touches && e.touches.length > 1 && (self.isGesturing = true) && onGestureStart(e, self.isDragging),\n\t\t\t_onGestureEnd = () => (self.isGesturing = false) || onGestureEnd(self),\n\t\t\tonScroll = e => {\n\t\t\t\tif (_ignoreCheck(e)) {return;}\n\t\t\t\tlet x = scrollFuncX(),\n\t\t\t\t\ty = scrollFuncY();\n\t\t\t\tonDelta(x - scrollX, y - scrollY, 1);\n\t\t\t\tscrollX = x;\n\t\t\t\tscrollY = y;\n\t\t\t\tonStop && onStopDelayedCall.restart(true);\n\t\t\t},\n\t\t\t_onWheel = e => {\n\t\t\t\tif (_ignoreCheck(e)) {return;}\n\t\t\t\te = _getEvent(e, preventDefault);\n\t\t\t\tonWheel && (wheeled = true);\n\t\t\t\tlet multiplier = (e.deltaMode === 1 ? lineHeight : e.deltaMode === 2 ? _win.innerHeight : 1) * wheelSpeed;\n\t\t\t\tonDelta(e.deltaX * multiplier, e.deltaY * multiplier, 0);\n\t\t\t\tonStop && !isNormalizer && onStopDelayedCall.restart(true);\n\t\t\t},\n\t\t\t_onMove = e => {\n\t\t\t\tif (_ignoreCheck(e)) {return;}\n\t\t\t\tlet x = e.clientX,\n\t\t\t\t\ty = e.clientY,\n\t\t\t\t\tdx = x - self.x,\n\t\t\t\t\tdy = y - self.y;\n\t\t\t\tself.x = x;\n\t\t\t\tself.y = y;\n\t\t\t\tonMove && (moved = true);\n\t\t\t\t(dx || dy) && onDelta(dx, dy, 2);\n\t\t\t},\n\t\t\t_onHover = e => {self.event = e; onHover(self);},\n\t\t\t_onHoverEnd = e => {self.event = e; onHoverEnd(self);},\n\t\t\t_onClick = e => _ignoreCheck(e) || (_getEvent(e, preventDefault) && onClick(self));\n\n\t\tonStopDelayedCall = self._dc = gsap.delayedCall(onStopDelay || 0.25, onStopFunc).pause();\n\n\t\tself.deltaX = self.deltaY = 0;\n\t\tself._vx = _getVelocityProp(0, 50, true);\n\t\tself._vy = _getVelocityProp(0, 50, true);\n\t\tself.scrollX = scrollFuncX;\n\t\tself.scrollY = scrollFuncY;\n\t\tself.isDragging = self.isGesturing = self.isPressed = false;\n\t\tself.enable = e => {\n\t\t\tif (!self.isEnabled) {\n\t\t\t\t_addListener(isViewport ? ownerDoc : target, \"scroll\", _onScroll);\n\t\t\t\ttype.indexOf(\"scroll\") >= 0 && _addListener(isViewport ? ownerDoc : target, \"scroll\", onScroll, preventDefault);\n\t\t\t\ttype.indexOf(\"wheel\") >= 0 && _addListener(target, \"wheel\", _onWheel, preventDefault);\n\t\t\t\tif ((type.indexOf(\"touch\") >= 0 && _isTouch) || type.indexOf(\"pointer\") >= 0) {\n\t\t\t\t\t_addListener(target, events[0], _onPress, preventDefault);\n\t\t\t\t\t_addListener(ownerDoc, events[2], _onRelease);\n\t\t\t\t\t_addListener(ownerDoc, events[3], _onRelease);\n\t\t\t\t\tonClick && _addListener(target, \"click\", _onClick);\n\t\t\t\t\tonGestureStart && _addListener(ownerDoc, \"gesturestart\", _onGestureStart);\n\t\t\t\t\tonGestureEnd && _addListener(ownerDoc, \"gestureend\", _onGestureEnd);\n\t\t\t\t\tonHover && _addListener(target, _pointerType + \"enter\", _onHover);\n\t\t\t\t\tonHoverEnd && _addListener(target, _pointerType + \"leave\", _onHoverEnd);\n\t\t\t\t\tonMove && _addListener(target, _pointerType + \"move\", _onMove);\n\t\t\t\t}\n\t\t\t\tself.isEnabled = true;\n\t\t\t\te && e.type && _onPress(e);\n\t\t\t\tonEnable && onEnable(self);\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\t\tself.disable = () => {\n\t\t\tif (self.isEnabled) {\n\t\t\t\t// only remove the _onScroll listener if there aren't any others that rely on the functionality.\n\t\t\t\t_observers.filter(o => o !== self && _isViewport(o.target)).length || _removeListener(isViewport ? ownerDoc : target, \"scroll\", _onScroll);\n\t\t\t\t_removeListener(isViewport ? ownerDoc : target, \"scroll\", onScroll);\n\t\t\t\t_removeListener(target, \"wheel\", _onWheel);\n\t\t\t\t_removeListener(target, events[0], _onPress);\n\t\t\t\t_removeListener(ownerDoc, events[2], _onRelease);\n\t\t\t\t_removeListener(ownerDoc, events[3], _onRelease);\n\t\t\t\t_removeListener(target, \"click\", _onClick);\n\t\t\t\t_removeListener(ownerDoc, \"gesturestart\", _onGestureStart);\n\t\t\t\t_removeListener(ownerDoc, \"gestureend\", _onGestureEnd);\n\t\t\t\t_removeListener(target, _pointerType + \"enter\", _onHover);\n\t\t\t\t_removeListener(target, _pointerType + \"leave\", _onHoverEnd);\n\t\t\t\t_removeListener(target, _pointerType + \"move\", _onMove);\n\t\t\t\tself.isEnabled = false;\n\t\t\t\tonDisable && onDisable(self);\n\t\t\t}\n\t\t};\n\n\t\tself.kill = () => {\n\t\t\tself.disable();\n\t\t\tlet i = _observers.indexOf(self);\n\t\t\ti >= 0 && _observers.splice(i, 1);\n\t\t\t_normalizer === self && (_normalizer = 0);\n\t\t}\n\n\t\t_observers.push(self);\n\t\tisNormalizer && (_normalizer = self);\n\n\t\tself.enable(event);\n\t}\n\n\tget velocityX() {\n\t\treturn this._vx.getVelocity();\n\t}\n\tget velocityY() {\n\t\treturn this._vy.getVelocity();\n\t}\n\n}\n\nObserver.version = \"3.10.0\";\nObserver.create = vars => new Observer(vars);\nObserver.register = _initCore;\nObserver.getAll = () => _observers.slice();\nObserver.getById = id => _observers.filter(o => o.vars.id === id)[0];\n\n_getGSAP() && gsap.registerPlugin(Observer);\n\nexport { Observer as default, _isViewport, _scrollers, _getScrollFunc, _getProxyProp, _proxies, _getVelocityProp, _vertical, _horizontal, _getTarget };"],"names":["_getGSAP","gsap","window","registerPlugin","_coreInitted","_win","_doc","_docEl","_body","_isTouch","_pointerType","ScrollTrigger","_root","_normalizer","_startup","_observers","_scrollers","_proxies","_getProxyProp","element","property","indexOf","_isViewport","el","_addListener","type","func","nonPassive","addEventListener","passive","_removeListener","removeEventListener","_onScroll","isPressed","cache","_scrollCacheFunc","f","value","history","scrollRestoration","v","c","_bridge","_getTarget","t","utils","toArray","config","nullTargetWarn","console","warn","_getScrollFunc","s","sc","i","offset","_vertical","push","arguments","length","_getVelocityProp","minTimeRefresh","useDelta","update","force","_getTime","min","t1","v2","v1","t2","dropToZeroTime","Math","max","reset","getVelocity","latestValue","tOld","vOld","_getEvent","e","preventDefault","changedTouches","_getAbsoluteMax","a","abs","_initCore","core","document","documentElement","body","clamp","Observer","isTouch","matchMedia","matches","navigator","maxTouchPoints","msMaxTouchPoints","setTimeout","Date","now","name","_scrollLeft","_scrollTop","_horizontal","p","p2","os","os2","d","d2","scrollTo","pageXOffset","op","pageYOffset","init","vars","globals","_integrate","data","bridge","scrollers","proxies","tolerance","dragMinimum","target","lineHeight","debounce","onStop","onStopDelay","ignore","wheelSpeed","event","onDragStart","onDragEnd","onDrag","onPress","onRelease","onRight","onLeft","onUp","onDown","onChangeX","onChangeY","onChange","onToggleX","onToggleY","onHover","onHoverEnd","onMove","ignoreCheck","isNormalizer","onGestureStart","onGestureEnd","onWheel","onEnable","onDisable","onClick","_ignoreCheck","isPointerOrTouch","self","limitToTouch","pointerType","dx","deltaX","dy","deltaY","changedX","changedY","prevDeltaX","prevDeltaY","moved","dragged","wheeled","id","onDelta","x","y","index","_vx","_vy","requestAnimationFrame","_onDrag","clientX","clientY","isDragging","startX","startY","_onRelease","ownerDoc","events","wasDragging","isGesturing","onStopDelayedCall","restart","_onGestureStart","touches","_onGestureEnd","onScroll","scrollFuncX","scrollFuncY","scrollX","scrollY","_onWheel","multiplier","deltaMode","innerHeight","_onMove","_onHover","_onHoverEnd","_onClick","parseFloat","getComputedStyle","this","split","isViewport","ownerDocument","_onPress","pause","_dc","delayedCall","onStopFunc","enable","isEnabled","disable","filter","o","kill","splice","version","create","register","getAll","slice","getById"],"mappings":"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"}